
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.URL;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ADITI SURI
 */
public class UserAddPost extends javax.swing.JFrame {

    /**
     * Creates new form UserAddPost
     */
    String user;
    File f;
    Dimension d;

    public UserAddPost(String username) {
        initComponents();
        user = username;
        d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d.getSize());
        jbg.setSize(d.getSize());
        ImageIcon icon = new ImageIcon("src/uploads/white.jpg");
        Image resizedimg = icon.getImage().getScaledInstance(jbg.getWidth(), jbg.getHeight(), Image.SCALE_SMOOTH);
        jbg.setIcon(new ImageIcon(resizedimg));
        setVisible(true);
        getAllPosts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPhoto = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jCaption = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        jbg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Yu Gothic Light", 1, 24)); // NOI18N
        jLabel1.setText("ADD POST:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 0, 190, 100);

        jLabel2.setText("PHOTO");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 140, 90, 50);

        jButton1.setText("BROWSE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(30, 230, 140, 80);
        getContentPane().add(jPhoto);
        jPhoto.setBounds(200, 130, 220, 180);

        jLabel4.setText("CAPTION");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 370, 90, 50);

        jCaption.setColumns(20);
        jCaption.setRows(5);
        jScrollPane1.setViewportView(jCaption);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(180, 350, 230, 110);

        jButton2.setText("ADD POST");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(150, 550, 200, 80);

        mainPanel.setBackground(new java.awt.Color(255, 204, 204));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 718, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(mainPanel);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(430, 10, 860, 710);

        jbg.setText("jLabel3");
        getContentPane().add(jbg);
        jbg.setBounds(0, 0, 51, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String caption = jCaption.getText();
        if (caption.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please write a caption");
        } else if (f == null) {
            JOptionPane.showMessageDialog(this, "Please choose a photo");
        } else {
            try {
                HttpResponse<String> res = Unirest.post("http://localhost:8999/AddPost")
                        .queryString("caption", caption)
                        .queryString("username", user)
                        .field("photo", f)
                        .asString();
                if (res.getStatus() == 200) {
                    String response = res.getBody();
                    System.out.println("response is ----" + response);
                    if (response.equals("success")) {
                        JOptionPane.showMessageDialog(this, "Photo Added successfully");
                        getAllPosts();
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int ans = chooser.showOpenDialog(this);
        if (ans == JFileChooser.APPROVE_OPTION) {
            f = chooser.getSelectedFile();
            ImageIcon icon = new ImageIcon(f.getPath());
            Image resizedimg = icon.getImage().getScaledInstance(jPhoto.getWidth(), jPhoto.getHeight(), Image.SCALE_SMOOTH);
            jPhoto.setIcon(new ImageIcon(resizedimg));
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void getAllPosts() {
        try {
            HttpResponse<String> res = Unirest.get("http://localhost:8999/getAllPosts")
                    .queryString("username", user)
                    .asString();
            if (res.getStatus() == 200) {
                String response = res.getBody();
                System.out.println(response);
                if (response.equals("fails")) {
                    JOptionPane.showMessageDialog(this, "No Followers!!!!");
                } else {
                    System.out.println("Response---->" + response);
                    StringTokenizer st = new StringTokenizer(response, "~~");
                    int count = st.countTokens();
                    mainPanel.removeAll();
                    mainPanel.setPreferredSize(new Dimension(d.width - 300, count * 330));
                    UserPostPanelDesign obj[] = new UserPostPanelDesign[count];
                    int x = 10, y = 10;
                    for (int i = 0; i < count; i++) {
                        final int a = i;
                        String userToken = st.nextToken();
                        StringTokenizer st2 = new StringTokenizer(userToken, ";;");
                        String post_id = st2.nextToken();
                        String photoPath = st2.nextToken();
                        String caption = st2.nextToken();

                        String date = st2.nextToken();
                        System.out.println("caption----->" + caption);
                        System.out.println("photoPath---->" + photoPath);
                        System.out.println("date----->" + date);
                        System.out.println("post_id--->" + post_id);
                        obj[i] = new UserPostPanelDesign();
                        obj[i].jCaption.setText(caption);
                        obj[i].jDate.setText(date);
                        //   obj[i].jPhoto.setText(photoPath);
                        try {
                            URL url = new URL(GlobalClass.serverAddress + "GetResource/" + photoPath);
                            //System.out.println("Path of Image Stored in server side--------------" + url);
                            BufferedImage img = ImageIO.read(url);
                            Image resizedimage = img.getScaledInstance(obj[i].jPhoto.getWidth(), obj[i].jPhoto.getHeight(), Image.SCALE_SMOOTH);
                            obj[i].jPhoto.setIcon(new ImageIcon(resizedimage));

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        obj[i].jaddStorybtn.addActionListener(new ActionListener() {

                            @Override
                            public void actionPerformed(ActionEvent e) {
                                UserAddStory obj = new UserAddStory(post_id);
                            }
                        });
                        obj[i].jDeletebtn.addActionListener(new ActionListener() {

                            @Override
                            public void actionPerformed(ActionEvent e) {
                                //SEND UNIREST GET REQUEST ON RESOURCE DELETE POST  WITH POSTID
                                try {
                                    HttpResponse<String> res = Unirest.get("http://localhost:8999/deletePost")
                                            .queryString("postid", post_id)
                                            .asString();
                                    if (res.getStatus() == 200) {
                                        String response = res.getBody();
                                        System.out.println(response);
                                        if (response.equals("success")) {
                                            getAllPosts();
                                        }
                                    }
                                } catch (Exception ex) {
                                    ex.printStackTrace();
                                }

                            }
                        });
                        obj[i].setBounds(x, y, 800, 300);

                        mainPanel.add(obj[i]);
                        y += 300;
                        mainPanel.repaint();
                        obj[i].repaint();
                    }
                    mainPanel.repaint();

                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserAddPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserAddPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserAddPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserAddPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserAddPost("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextArea jCaption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jPhoto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jbg;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
